{"ast":null,"code":"/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { proxyCustomElement, HTMLElement, createEvent, Build, h, Host } from '@stencil/core/internal/client';\nimport { g as getTimeGivenProgression } from './cubic-bezier.js';\nimport { o as getPresentedOverlay, n as focusFirstDescendant, q as focusLastDescendant } from './overlays.js';\nimport { G as GESTURE_CONTROLLER } from './gesture-controller.js';\nimport { shouldUseCloseWatcher } from './hardware-back-button.js';\nimport { m as isEndSide, i as inheritAriaAttributes, n as assert, k as clamp } from './helpers.js';\nimport { m as menuController } from './index4.js';\nimport { h as hostContext } from './theme.js';\nimport { c as config, b as getIonMode } from './ionic-global.js';\nimport { d as defineCustomElement$2 } from './backdrop.js';\nconst menuIosCss = \":host{--width:304px;--min-width:auto;--max-width:auto;--height:100%;--min-height:auto;--max-height:auto;--background:var(--ion-background-color, #fff);left:0;right:0;top:0;bottom:0;display:none;position:absolute;contain:strict}:host(.show-menu){display:block}.menu-inner{-webkit-transform:translateX(-9999px);transform:translateX(-9999px);display:-ms-flexbox;display:flex;position:absolute;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:justify;justify-content:space-between;width:var(--width);min-width:var(--min-width);max-width:var(--max-width);height:var(--height);min-height:var(--min-height);max-height:var(--max-height);background:var(--background);contain:strict}:host(.menu-side-start) .menu-inner{--ion-safe-area-right:0px;top:0;bottom:0}:host(.menu-side-start) .menu-inner{inset-inline-start:0;inset-inline-end:auto}:host-context([dir=rtl]):host(.menu-side-start) .menu-inner,:host-context([dir=rtl]).menu-side-start .menu-inner{--ion-safe-area-right:unset;--ion-safe-area-left:0px}@supports selector(:dir(rtl)){:host(.menu-side-start:dir(rtl)) .menu-inner{--ion-safe-area-right:unset;--ion-safe-area-left:0px}}:host(.menu-side-end) .menu-inner{--ion-safe-area-left:0px;top:0;bottom:0}:host(.menu-side-end) .menu-inner{inset-inline-start:auto;inset-inline-end:0}:host-context([dir=rtl]):host(.menu-side-end) .menu-inner,:host-context([dir=rtl]).menu-side-end .menu-inner{--ion-safe-area-left:unset;--ion-safe-area-right:0px}@supports selector(:dir(rtl)){:host(.menu-side-end:dir(rtl)) .menu-inner{--ion-safe-area-left:unset;--ion-safe-area-right:0px}}ion-backdrop{display:none;opacity:0.01;z-index:-1}@media (max-width: 340px){.menu-inner{--width:264px}}:host(.menu-type-reveal){z-index:0}:host(.menu-type-reveal.show-menu) .menu-inner{-webkit-transform:translate3d(0,  0,  0);transform:translate3d(0,  0,  0)}:host(.menu-type-overlay){z-index:1000}:host(.menu-type-overlay) .show-backdrop{display:block;cursor:pointer}:host(.menu-pane-visible){-ms-flex:0 1 auto;flex:0 1 auto;width:var(--side-width, var(--width));min-width:var(--side-min-width, var(--min-width));max-width:var(--side-max-width, var(--max-width))}:host(.menu-pane-visible.split-pane-side){left:0;right:0;top:0;bottom:0;position:relative;-webkit-box-shadow:none;box-shadow:none;z-index:0}:host(.menu-pane-visible.split-pane-side.menu-enabled){display:-ms-flexbox;display:flex;-ms-flex-negative:0;flex-shrink:0}:host(.menu-pane-visible.split-pane-side){-ms-flex-order:-1;order:-1}:host(.menu-pane-visible.split-pane-side[side=end]){-ms-flex-order:1;order:1}:host(.menu-pane-visible) .menu-inner{left:0;right:0;width:auto;-webkit-transform:none;transform:none;-webkit-box-shadow:none;box-shadow:none}:host(.menu-pane-visible) ion-backdrop{display:hidden !important}:host(.menu-pane-visible.split-pane-side){-webkit-border-start:0;border-inline-start:0;-webkit-border-end:var(--border);border-inline-end:var(--border);border-top:0;border-bottom:0;min-width:var(--side-min-width);max-width:var(--side-max-width)}:host(.menu-pane-visible.split-pane-side[side=end]){-webkit-border-start:var(--border);border-inline-start:var(--border);-webkit-border-end:0;border-inline-end:0;border-top:0;border-bottom:0;min-width:var(--side-min-width);max-width:var(--side-max-width)}:host(.menu-type-push){z-index:1000}:host(.menu-type-push) .show-backdrop{display:block}\";\nconst IonMenuIosStyle0 = menuIosCss;\nconst menuMdCss = \":host{--width:304px;--min-width:auto;--max-width:auto;--height:100%;--min-height:auto;--max-height:auto;--background:var(--ion-background-color, #fff);left:0;right:0;top:0;bottom:0;display:none;position:absolute;contain:strict}:host(.show-menu){display:block}.menu-inner{-webkit-transform:translateX(-9999px);transform:translateX(-9999px);display:-ms-flexbox;display:flex;position:absolute;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:justify;justify-content:space-between;width:var(--width);min-width:var(--min-width);max-width:var(--max-width);height:var(--height);min-height:var(--min-height);max-height:var(--max-height);background:var(--background);contain:strict}:host(.menu-side-start) .menu-inner{--ion-safe-area-right:0px;top:0;bottom:0}:host(.menu-side-start) .menu-inner{inset-inline-start:0;inset-inline-end:auto}:host-context([dir=rtl]):host(.menu-side-start) .menu-inner,:host-context([dir=rtl]).menu-side-start .menu-inner{--ion-safe-area-right:unset;--ion-safe-area-left:0px}@supports selector(:dir(rtl)){:host(.menu-side-start:dir(rtl)) .menu-inner{--ion-safe-area-right:unset;--ion-safe-area-left:0px}}:host(.menu-side-end) .menu-inner{--ion-safe-area-left:0px;top:0;bottom:0}:host(.menu-side-end) .menu-inner{inset-inline-start:auto;inset-inline-end:0}:host-context([dir=rtl]):host(.menu-side-end) .menu-inner,:host-context([dir=rtl]).menu-side-end .menu-inner{--ion-safe-area-left:unset;--ion-safe-area-right:0px}@supports selector(:dir(rtl)){:host(.menu-side-end:dir(rtl)) .menu-inner{--ion-safe-area-left:unset;--ion-safe-area-right:0px}}ion-backdrop{display:none;opacity:0.01;z-index:-1}@media (max-width: 340px){.menu-inner{--width:264px}}:host(.menu-type-reveal){z-index:0}:host(.menu-type-reveal.show-menu) .menu-inner{-webkit-transform:translate3d(0,  0,  0);transform:translate3d(0,  0,  0)}:host(.menu-type-overlay){z-index:1000}:host(.menu-type-overlay) .show-backdrop{display:block;cursor:pointer}:host(.menu-pane-visible){-ms-flex:0 1 auto;flex:0 1 auto;width:var(--side-width, var(--width));min-width:var(--side-min-width, var(--min-width));max-width:var(--side-max-width, var(--max-width))}:host(.menu-pane-visible.split-pane-side){left:0;right:0;top:0;bottom:0;position:relative;-webkit-box-shadow:none;box-shadow:none;z-index:0}:host(.menu-pane-visible.split-pane-side.menu-enabled){display:-ms-flexbox;display:flex;-ms-flex-negative:0;flex-shrink:0}:host(.menu-pane-visible.split-pane-side){-ms-flex-order:-1;order:-1}:host(.menu-pane-visible.split-pane-side[side=end]){-ms-flex-order:1;order:1}:host(.menu-pane-visible) .menu-inner{left:0;right:0;width:auto;-webkit-transform:none;transform:none;-webkit-box-shadow:none;box-shadow:none}:host(.menu-pane-visible) ion-backdrop{display:hidden !important}:host(.menu-pane-visible.split-pane-side){-webkit-border-start:0;border-inline-start:0;-webkit-border-end:var(--border);border-inline-end:var(--border);border-top:0;border-bottom:0;min-width:var(--side-min-width);max-width:var(--side-max-width)}:host(.menu-pane-visible.split-pane-side[side=end]){-webkit-border-start:var(--border);border-inline-start:var(--border);-webkit-border-end:0;border-inline-end:0;border-top:0;border-bottom:0;min-width:var(--side-min-width);max-width:var(--side-max-width)}:host(.menu-type-overlay) .menu-inner{-webkit-box-shadow:4px 0px 16px rgba(0, 0, 0, 0.18);box-shadow:4px 0px 16px rgba(0, 0, 0, 0.18)}\";\nconst IonMenuMdStyle0 = menuMdCss;\nconst iosEasing = 'cubic-bezier(0.32,0.72,0,1)';\nconst mdEasing = 'cubic-bezier(0.0,0.0,0.2,1)';\nconst iosEasingReverse = 'cubic-bezier(1, 0, 0.68, 0.28)';\nconst mdEasingReverse = 'cubic-bezier(0.4, 0, 0.6, 1)';\nconst Menu = /*@__PURE__*/proxyCustomElement(class Menu extends HTMLElement {\n  constructor() {\n    super();\n    this.__registerHost();\n    this.__attachShadow();\n    this.ionWillOpen = createEvent(this, \"ionWillOpen\", 7);\n    this.ionWillClose = createEvent(this, \"ionWillClose\", 7);\n    this.ionDidOpen = createEvent(this, \"ionDidOpen\", 7);\n    this.ionDidClose = createEvent(this, \"ionDidClose\", 7);\n    this.ionMenuChange = createEvent(this, \"ionMenuChange\", 7);\n    this.lastOnEnd = 0;\n    this.blocker = GESTURE_CONTROLLER.createBlocker({\n      disableScroll: true\n    });\n    this.didLoad = false;\n    /**\n     * Flag used to determine if an open/close\n     * operation was cancelled. For example, if\n     * an app calls \"menu.open\" then disables the menu\n     * part way through the animation, then this would\n     * be considered a cancelled operation.\n     */\n    this.operationCancelled = false;\n    this.isAnimating = false;\n    this._isOpen = false;\n    this.inheritedAttributes = {};\n    this.handleFocus = ev => {\n      /**\n       * Overlays have their own focus trapping listener\n       * so we do not want the two listeners to conflict\n       * with each other. If the top-most overlay that is\n       * open does not contain this ion-menu, then ion-menu's\n       * focus trapping should not run.\n       */\n      const lastOverlay = getPresentedOverlay(document);\n      if (lastOverlay && !lastOverlay.contains(this.el)) {\n        return;\n      }\n      this.trapKeyboardFocus(ev, document);\n    };\n    this.isPaneVisible = false;\n    this.isEndSide = false;\n    this.contentId = undefined;\n    this.menuId = undefined;\n    this.type = undefined;\n    this.disabled = false;\n    this.side = 'start';\n    this.swipeGesture = true;\n    this.maxEdgeStart = 50;\n  }\n  typeChanged(type, oldType) {\n    const contentEl = this.contentEl;\n    if (contentEl) {\n      if (oldType !== undefined) {\n        contentEl.classList.remove(`menu-content-${oldType}`);\n      }\n      contentEl.classList.add(`menu-content-${type}`);\n      contentEl.removeAttribute('style');\n    }\n    if (this.menuInnerEl) {\n      // Remove effects of previous animations\n      this.menuInnerEl.removeAttribute('style');\n    }\n    this.animation = undefined;\n  }\n  disabledChanged() {\n    this.updateState();\n    this.ionMenuChange.emit({\n      disabled: this.disabled,\n      open: this._isOpen\n    });\n  }\n  sideChanged() {\n    this.isEndSide = isEndSide(this.side);\n    /**\n     * Menu direction animation is calculated based on the document direction.\n     * If the document direction changes, we need to create a new animation.\n     */\n    this.animation = undefined;\n  }\n  swipeGestureChanged() {\n    this.updateState();\n  }\n  async connectedCallback() {\n    // TODO: connectedCallback is fired in CE build\n    // before WC is defined. This needs to be fixed in Stencil.\n    if (typeof customElements !== 'undefined' && customElements != null) {\n      await customElements.whenDefined('ion-menu');\n    }\n    if (this.type === undefined) {\n      this.type = config.get('menuType', 'overlay');\n    }\n    if (!Build.isBrowser) {\n      return;\n    }\n    const content = this.contentId !== undefined ? document.getElementById(this.contentId) : null;\n    if (content === null) {\n      console.error('Menu: must have a \"content\" element to listen for drag events on.');\n      return;\n    }\n    if (this.el.contains(content)) {\n      console.error(`Menu: \"contentId\" should refer to the main view's ion-content, not the ion-content inside of the ion-menu.`);\n    }\n    this.contentEl = content;\n    // add menu's content classes\n    content.classList.add('menu-content');\n    this.typeChanged(this.type, undefined);\n    this.sideChanged();\n    // register this menu with the app's menu controller\n    menuController._register(this);\n    this.menuChanged();\n    this.gesture = (await import('./index3.js')).createGesture({\n      el: document,\n      gestureName: 'menu-swipe',\n      gesturePriority: 30,\n      threshold: 10,\n      blurOnStart: true,\n      canStart: ev => this.canStart(ev),\n      onWillStart: () => this.onWillStart(),\n      onStart: () => this.onStart(),\n      onMove: ev => this.onMove(ev),\n      onEnd: ev => this.onEnd(ev)\n    });\n    this.updateState();\n  }\n  componentWillLoad() {\n    this.inheritedAttributes = inheritAriaAttributes(this.el);\n  }\n  async componentDidLoad() {\n    this.didLoad = true;\n    /**\n     * A menu inside of a split pane is assumed\n     * to be a side pane.\n     *\n     * When the menu is loaded it needs to\n     * see if it should be considered visible inside\n     * of the split pane. If the split pane is\n     * hidden then the menu should be too.\n     */\n    const splitPane = this.el.closest('ion-split-pane');\n    if (splitPane !== null) {\n      this.isPaneVisible = await splitPane.isVisible();\n    }\n    this.menuChanged();\n    this.updateState();\n  }\n  menuChanged() {\n    /**\n     * Inform dependent components such as ion-menu-button\n     * that the menu is ready. Note that we only want to do this\n     * once the menu has been rendered which is why we check for didLoad.\n     */\n    if (this.didLoad) {\n      this.ionMenuChange.emit({\n        disabled: this.disabled,\n        open: this._isOpen\n      });\n    }\n  }\n  async disconnectedCallback() {\n    /**\n     * The menu should be closed when it is\n     * unmounted from the DOM.\n     * This is an async call, so we need to wait for\n     * this to finish otherwise contentEl\n     * will not have MENU_CONTENT_OPEN removed.\n     */\n    await this.close(false);\n    this.blocker.destroy();\n    menuController._unregister(this);\n    if (this.animation) {\n      this.animation.destroy();\n    }\n    if (this.gesture) {\n      this.gesture.destroy();\n      this.gesture = undefined;\n    }\n    this.animation = undefined;\n    this.contentEl = undefined;\n  }\n  onSplitPaneChanged(ev) {\n    const closestSplitPane = this.el.closest('ion-split-pane');\n    if (closestSplitPane !== null && closestSplitPane === ev.target) {\n      this.isPaneVisible = ev.detail.visible;\n      this.updateState();\n    }\n  }\n  onBackdropClick(ev) {\n    // TODO(FW-2832): type (CustomEvent triggers errors which should be sorted)\n    if (this._isOpen && this.lastOnEnd < ev.timeStamp - 100) {\n      const shouldClose = ev.composedPath ? !ev.composedPath().includes(this.menuInnerEl) : false;\n      if (shouldClose) {\n        ev.preventDefault();\n        ev.stopPropagation();\n        this.close();\n      }\n    }\n  }\n  onKeydown(ev) {\n    if (ev.key === 'Escape') {\n      this.close();\n    }\n  }\n  /**\n   * Returns `true` is the menu is open.\n   */\n  isOpen() {\n    return Promise.resolve(this._isOpen);\n  }\n  /**\n   * Returns `true` is the menu is active.\n   *\n   * A menu is active when it can be opened or closed, meaning it's enabled\n   * and it's not part of a `ion-split-pane`.\n   */\n  isActive() {\n    return Promise.resolve(this._isActive());\n  }\n  /**\n   * Opens the menu. If the menu is already open or it can't be opened,\n   * it returns `false`.\n   */\n  open(animated = true) {\n    return this.setOpen(true, animated);\n  }\n  /**\n   * Closes the menu. If the menu is already closed or it can't be closed,\n   * it returns `false`.\n   */\n  close(animated = true) {\n    return this.setOpen(false, animated);\n  }\n  /**\n   * Toggles the menu. If the menu is already open, it will try to close, otherwise it will try to open it.\n   * If the operation can't be completed successfully, it returns `false`.\n   */\n  toggle(animated = true) {\n    return this.setOpen(!this._isOpen, animated);\n  }\n  /**\n   * Opens or closes the button.\n   * If the operation can't be completed successfully, it returns `false`.\n   */\n  setOpen(shouldOpen, animated = true) {\n    return menuController._setOpen(this, shouldOpen, animated);\n  }\n  trapKeyboardFocus(ev, doc) {\n    const target = ev.target;\n    if (!target) {\n      return;\n    }\n    /**\n     * If the target is inside the menu contents, let the browser\n     * focus as normal and keep a log of the last focused element.\n     */\n    if (this.el.contains(target)) {\n      this.lastFocus = target;\n    } else {\n      /**\n       * Otherwise, we are about to have focus go out of the menu.\n       * Wrap the focus to either the first or last element.\n       */\n      const {\n        el\n      } = this;\n      /**\n       * Once we call `focusFirstDescendant`, another focus event\n       * will fire, which will cause `lastFocus` to be updated\n       * before we can run the code after that. We cache the value\n       * here to avoid that.\n       */\n      focusFirstDescendant(el);\n      /**\n       * If the cached last focused element is the same as the now-\n       * active element, that means the user was on the first element\n       * already and pressed Shift + Tab, so we need to wrap to the\n       * last descendant.\n       */\n      if (this.lastFocus === doc.activeElement) {\n        focusLastDescendant(el);\n      }\n    }\n  }\n  async _setOpen(shouldOpen, animated = true) {\n    // If the menu is disabled or it is currently being animated, let's do nothing\n    if (!this._isActive() || this.isAnimating || shouldOpen === this._isOpen) {\n      return false;\n    }\n    this.beforeAnimation(shouldOpen);\n    await this.loadAnimation();\n    await this.startAnimation(shouldOpen, animated);\n    /**\n     * If the animation was cancelled then\n     * return false because the operation\n     * did not succeed.\n     */\n    if (this.operationCancelled) {\n      this.operationCancelled = false;\n      return false;\n    }\n    this.afterAnimation(shouldOpen);\n    return true;\n  }\n  async loadAnimation() {\n    // Menu swipe animation takes the menu's inner width as parameter,\n    // If `offsetWidth` changes, we need to create a new animation.\n    const width = this.menuInnerEl.offsetWidth;\n    /**\n     * Menu direction animation is calculated based on the document direction.\n     * If the document direction changes, we need to create a new animation.\n     */\n    const isEndSide$1 = isEndSide(this.side);\n    if (width === this.width && this.animation !== undefined && isEndSide$1 === this.isEndSide) {\n      return;\n    }\n    this.width = width;\n    this.isEndSide = isEndSide$1;\n    // Destroy existing animation\n    if (this.animation) {\n      this.animation.destroy();\n      this.animation = undefined;\n    }\n    // Create new animation\n    const animation = this.animation = await menuController._createAnimation(this.type, this);\n    if (!config.getBoolean('animated', true)) {\n      animation.duration(0);\n    }\n    animation.fill('both');\n  }\n  async startAnimation(shouldOpen, animated) {\n    const isReversed = !shouldOpen;\n    const mode = getIonMode(this);\n    const easing = mode === 'ios' ? iosEasing : mdEasing;\n    const easingReverse = mode === 'ios' ? iosEasingReverse : mdEasingReverse;\n    const ani = this.animation.direction(isReversed ? 'reverse' : 'normal').easing(isReversed ? easingReverse : easing);\n    if (animated) {\n      await ani.play();\n    } else {\n      ani.play({\n        sync: true\n      });\n    }\n    /**\n     * We run this after the play invocation\n     * instead of using ani.onFinish so that\n     * multiple onFinish callbacks do not get\n     * run if an animation is played, stopped,\n     * and then played again.\n     */\n    if (ani.getDirection() === 'reverse') {\n      ani.direction('normal');\n    }\n  }\n  _isActive() {\n    return !this.disabled && !this.isPaneVisible;\n  }\n  canSwipe() {\n    return this.swipeGesture && !this.isAnimating && this._isActive();\n  }\n  canStart(detail) {\n    // Do not allow swipe gesture if a modal is open\n    const isModalPresented = !!document.querySelector('ion-modal.show-modal');\n    if (isModalPresented || !this.canSwipe()) {\n      return false;\n    }\n    if (this._isOpen) {\n      return true;\n    } else if (menuController._getOpenSync()) {\n      return false;\n    }\n    return checkEdgeSide(window, detail.currentX, this.isEndSide, this.maxEdgeStart);\n  }\n  onWillStart() {\n    this.beforeAnimation(!this._isOpen);\n    return this.loadAnimation();\n  }\n  onStart() {\n    if (!this.isAnimating || !this.animation) {\n      assert(false, 'isAnimating has to be true');\n      return;\n    }\n    // the cloned animation should not use an easing curve during seek\n    this.animation.progressStart(true, this._isOpen ? 1 : 0);\n  }\n  onMove(detail) {\n    if (!this.isAnimating || !this.animation) {\n      assert(false, 'isAnimating has to be true');\n      return;\n    }\n    const delta = computeDelta(detail.deltaX, this._isOpen, this.isEndSide);\n    const stepValue = delta / this.width;\n    this.animation.progressStep(this._isOpen ? 1 - stepValue : stepValue);\n  }\n  onEnd(detail) {\n    if (!this.isAnimating || !this.animation) {\n      assert(false, 'isAnimating has to be true');\n      return;\n    }\n    const isOpen = this._isOpen;\n    const isEndSide = this.isEndSide;\n    const delta = computeDelta(detail.deltaX, isOpen, isEndSide);\n    const width = this.width;\n    const stepValue = delta / width;\n    const velocity = detail.velocityX;\n    const z = width / 2.0;\n    const shouldCompleteRight = velocity >= 0 && (velocity > 0.2 || detail.deltaX > z);\n    const shouldCompleteLeft = velocity <= 0 && (velocity < -0.2 || detail.deltaX < -z);\n    const shouldComplete = isOpen ? isEndSide ? shouldCompleteRight : shouldCompleteLeft : isEndSide ? shouldCompleteLeft : shouldCompleteRight;\n    let shouldOpen = !isOpen && shouldComplete;\n    if (isOpen && !shouldComplete) {\n      shouldOpen = true;\n    }\n    this.lastOnEnd = detail.currentTime;\n    // Account for rounding errors in JS\n    let newStepValue = shouldComplete ? 0.001 : -0.001;\n    /**\n     * stepValue can sometimes return a negative\n     * value, but you can't have a negative time value\n     * for the cubic bezier curve (at least with web animations)\n     */\n    const adjustedStepValue = stepValue < 0 ? 0.01 : stepValue;\n    /**\n     * Animation will be reversed here, so need to\n     * reverse the easing curve as well\n     *\n     * Additionally, we need to account for the time relative\n     * to the new easing curve, as `stepValue` is going to be given\n     * in terms of a linear curve.\n     */\n    newStepValue += getTimeGivenProgression([0, 0], [0.4, 0], [0.6, 1], [1, 1], clamp(0, adjustedStepValue, 0.9999))[0] || 0;\n    const playTo = this._isOpen ? !shouldComplete : shouldComplete;\n    this.animation.easing('cubic-bezier(0.4, 0.0, 0.6, 1)').onFinish(() => this.afterAnimation(shouldOpen), {\n      oneTimeCallback: true\n    }).progressEnd(playTo ? 1 : 0, this._isOpen ? 1 - newStepValue : newStepValue, 300);\n  }\n  beforeAnimation(shouldOpen) {\n    assert(!this.isAnimating, '_before() should not be called while animating');\n    // this places the menu into the correct location before it animates in\n    // this css class doesn't actually kick off any animations\n    this.el.classList.add(SHOW_MENU);\n    /**\n     * We add a tabindex here so that focus trapping\n     * still works even if the menu does not have\n     * any focusable elements slotted inside. The\n     * focus trapping utility will fallback to focusing\n     * the menu so focus does not leave when the menu\n     * is open.\n     */\n    this.el.setAttribute('tabindex', '0');\n    if (this.backdropEl) {\n      this.backdropEl.classList.add(SHOW_BACKDROP);\n    }\n    // add css class and hide content behind menu from screen readers\n    if (this.contentEl) {\n      this.contentEl.classList.add(MENU_CONTENT_OPEN);\n      /**\n       * When the menu is open and overlaying the main\n       * content, the main content should not be announced\n       * by the screenreader as the menu is the main\n       * focus. This is useful with screenreaders that have\n       * \"read from top\" gestures that read the entire\n       * page from top to bottom when activated.\n       * This should be done before the animation starts\n       * so that users cannot accidentally scroll\n       * the content while dragging a menu open.\n       */\n      this.contentEl.setAttribute('aria-hidden', 'true');\n    }\n    this.blocker.block();\n    this.isAnimating = true;\n    if (shouldOpen) {\n      this.ionWillOpen.emit();\n    } else {\n      this.ionWillClose.emit();\n    }\n  }\n  afterAnimation(isOpen) {\n    var _a;\n    // keep opening/closing the menu disabled for a touch more yet\n    // only add listeners/css if it's enabled and isOpen\n    // and only remove listeners/css if it's not open\n    // emit opened/closed events\n    this._isOpen = isOpen;\n    this.isAnimating = false;\n    if (!this._isOpen) {\n      this.blocker.unblock();\n    }\n    if (isOpen) {\n      // emit open event\n      this.ionDidOpen.emit();\n      /**\n       * Move focus to the menu to prepare focus trapping, as long as\n       * it isn't already focused. Use the host element instead of the\n       * first descendant to avoid the scroll position jumping around.\n       */\n      const focusedMenu = (_a = document.activeElement) === null || _a === void 0 ? void 0 : _a.closest('ion-menu');\n      if (focusedMenu !== this.el) {\n        this.el.focus();\n      }\n      // start focus trapping\n      document.addEventListener('focus', this.handleFocus, true);\n    } else {\n      // remove css classes and unhide content from screen readers\n      this.el.classList.remove(SHOW_MENU);\n      /**\n       * Remove tabindex from the menu component\n       * so that is cannot be tabbed to.\n       */\n      this.el.removeAttribute('tabindex');\n      if (this.contentEl) {\n        this.contentEl.classList.remove(MENU_CONTENT_OPEN);\n        /**\n         * Remove aria-hidden so screen readers\n         * can announce the main content again\n         * now that the menu is not the main focus.\n         */\n        this.contentEl.removeAttribute('aria-hidden');\n      }\n      if (this.backdropEl) {\n        this.backdropEl.classList.remove(SHOW_BACKDROP);\n      }\n      if (this.animation) {\n        this.animation.stop();\n      }\n      // emit close event\n      this.ionDidClose.emit();\n      // undo focus trapping so multiple menus don't collide\n      document.removeEventListener('focus', this.handleFocus, true);\n    }\n  }\n  updateState() {\n    const isActive = this._isActive();\n    if (this.gesture) {\n      this.gesture.enable(isActive && this.swipeGesture);\n    }\n    /**\n     * If the menu is disabled but it is still open\n     * then we should close the menu immediately.\n     * Additionally, if the menu is in the process\n     * of animating {open, close} and the menu is disabled\n     * then it should still be closed immediately.\n     */\n    if (!isActive) {\n      /**\n       * It is possible to disable the menu while\n       * it is mid-animation. When this happens, we\n       * need to set the operationCancelled flag\n       * so that this._setOpen knows to return false\n       * and not run the \"afterAnimation\" callback.\n       */\n      if (this.isAnimating) {\n        this.operationCancelled = true;\n      }\n      /**\n       * If the menu is disabled then we should\n       * forcibly close the menu even if it is open.\n       */\n      this.afterAnimation(false);\n    }\n  }\n  render() {\n    const {\n      type,\n      disabled,\n      el,\n      isPaneVisible,\n      inheritedAttributes,\n      side\n    } = this;\n    const mode = getIonMode(this);\n    /**\n     * If the Close Watcher is enabled then\n     * the ionBackButton listener in the menu controller\n     * will handle closing the menu when Escape is pressed.\n     */\n    return h(Host, {\n      key: '30c0c9bfb8973e4a6feb658f8c4ee8e362f464ed',\n      onKeyDown: shouldUseCloseWatcher() ? null : this.onKeydown,\n      role: \"navigation\",\n      \"aria-label\": inheritedAttributes['aria-label'] || 'menu',\n      class: {\n        [mode]: true,\n        [`menu-type-${type}`]: true,\n        'menu-enabled': !disabled,\n        [`menu-side-${side}`]: true,\n        'menu-pane-visible': isPaneVisible,\n        'split-pane-side': hostContext('ion-split-pane', el)\n      }\n    }, h(\"div\", {\n      key: '34b0e5840906862cf1bc27207e089004b0402c56',\n      class: \"menu-inner\",\n      part: \"container\",\n      ref: el => this.menuInnerEl = el\n    }, h(\"slot\", {\n      key: '2cd7e61a8c0987ca4b3f1f8b33cba7152f1275fe'\n    })), h(\"ion-backdrop\", {\n      key: 'd190b1f9b66c76e276f27bfe074d3aab796180fb',\n      ref: el => this.backdropEl = el,\n      class: \"menu-backdrop\",\n      tappable: false,\n      stopPropagation: false,\n      part: \"backdrop\"\n    }));\n  }\n  get el() {\n    return this;\n  }\n  static get watchers() {\n    return {\n      \"type\": [\"typeChanged\"],\n      \"disabled\": [\"disabledChanged\"],\n      \"side\": [\"sideChanged\"],\n      \"swipeGesture\": [\"swipeGestureChanged\"]\n    };\n  }\n  static get style() {\n    return {\n      ios: IonMenuIosStyle0,\n      md: IonMenuMdStyle0\n    };\n  }\n}, [33, \"ion-menu\", {\n  \"contentId\": [513, \"content-id\"],\n  \"menuId\": [513, \"menu-id\"],\n  \"type\": [1025],\n  \"disabled\": [1028],\n  \"side\": [513],\n  \"swipeGesture\": [4, \"swipe-gesture\"],\n  \"maxEdgeStart\": [2, \"max-edge-start\"],\n  \"isPaneVisible\": [32],\n  \"isEndSide\": [32],\n  \"isOpen\": [64],\n  \"isActive\": [64],\n  \"open\": [64],\n  \"close\": [64],\n  \"toggle\": [64],\n  \"setOpen\": [64]\n}, [[16, \"ionSplitPaneVisible\", \"onSplitPaneChanged\"], [2, \"click\", \"onBackdropClick\"]], {\n  \"type\": [\"typeChanged\"],\n  \"disabled\": [\"disabledChanged\"],\n  \"side\": [\"sideChanged\"],\n  \"swipeGesture\": [\"swipeGestureChanged\"]\n}]);\nconst computeDelta = (deltaX, isOpen, isEndSide) => {\n  return Math.max(0, isOpen !== isEndSide ? -deltaX : deltaX);\n};\nconst checkEdgeSide = (win, posX, isEndSide, maxEdgeStart) => {\n  if (isEndSide) {\n    return posX >= win.innerWidth - maxEdgeStart;\n  } else {\n    return posX <= maxEdgeStart;\n  }\n};\nconst SHOW_MENU = 'show-menu';\nconst SHOW_BACKDROP = 'show-backdrop';\nconst MENU_CONTENT_OPEN = 'menu-content-open';\nfunction defineCustomElement$1() {\n  if (typeof customElements === \"undefined\") {\n    return;\n  }\n  const components = [\"ion-menu\", \"ion-backdrop\"];\n  components.forEach(tagName => {\n    switch (tagName) {\n      case \"ion-menu\":\n        if (!customElements.get(tagName)) {\n          customElements.define(tagName, Menu);\n        }\n        break;\n      case \"ion-backdrop\":\n        if (!customElements.get(tagName)) {\n          defineCustomElement$2();\n        }\n        break;\n    }\n  });\n}\nconst IonMenu = Menu;\nconst defineCustomElement = defineCustomElement$1;\nexport { IonMenu, defineCustomElement };","map":{"version":3,"names":["proxyCustomElement","HTMLElement","createEvent","Build","h","Host","g","getTimeGivenProgression","o","getPresentedOverlay","n","focusFirstDescendant","q","focusLastDescendant","G","GESTURE_CONTROLLER","shouldUseCloseWatcher","m","isEndSide","i","inheritAriaAttributes","assert","k","clamp","menuController","hostContext","c","config","b","getIonMode","d","defineCustomElement$2","menuIosCss","IonMenuIosStyle0","menuMdCss","IonMenuMdStyle0","iosEasing","mdEasing","iosEasingReverse","mdEasingReverse","Menu","constructor","__registerHost","__attachShadow","ionWillOpen","ionWillClose","ionDidOpen","ionDidClose","ionMenuChange","lastOnEnd","blocker","createBlocker","disableScroll","didLoad","operationCancelled","isAnimating","_isOpen","inheritedAttributes","handleFocus","ev","lastOverlay","document","contains","el","trapKeyboardFocus","isPaneVisible","contentId","undefined","menuId","type","disabled","side","swipeGesture","maxEdgeStart","typeChanged","oldType","contentEl","classList","remove","add","removeAttribute","menuInnerEl","animation","disabledChanged","updateState","emit","open","sideChanged","swipeGestureChanged","connectedCallback","customElements","whenDefined","get","isBrowser","content","getElementById","console","error","_register","menuChanged","gesture","createGesture","gestureName","gesturePriority","threshold","blurOnStart","canStart","onWillStart","onStart","onMove","onEnd","componentWillLoad","componentDidLoad","splitPane","closest","isVisible","disconnectedCallback","close","destroy","_unregister","onSplitPaneChanged","closestSplitPane","target","detail","visible","onBackdropClick","timeStamp","shouldClose","composedPath","includes","preventDefault","stopPropagation","onKeydown","key","isOpen","Promise","resolve","isActive","_isActive","animated","setOpen","toggle","shouldOpen","_setOpen","doc","lastFocus","activeElement","beforeAnimation","loadAnimation","startAnimation","afterAnimation","width","offsetWidth","isEndSide$1","_createAnimation","getBoolean","duration","fill","isReversed","mode","easing","easingReverse","ani","direction","play","sync","getDirection","canSwipe","isModalPresented","querySelector","_getOpenSync","checkEdgeSide","window","currentX","progressStart","delta","computeDelta","deltaX","stepValue","progressStep","velocity","velocityX","z","shouldCompleteRight","shouldCompleteLeft","shouldComplete","currentTime","newStepValue","adjustedStepValue","playTo","onFinish","oneTimeCallback","progressEnd","SHOW_MENU","setAttribute","backdropEl","SHOW_BACKDROP","MENU_CONTENT_OPEN","block","_a","unblock","focusedMenu","focus","addEventListener","stop","removeEventListener","enable","render","onKeyDown","role","class","part","ref","tappable","watchers","style","ios","md","Math","max","win","posX","innerWidth","defineCustomElement$1","components","forEach","tagName","define","IonMenu","defineCustomElement"],"sources":["D:/HỌC TẬP/Lập trình web nâng cao/clone/shopping/node_modules/@ionic/core/components/ion-menu.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { proxyCustomElement, HTMLElement, createEvent, Build, h, Host } from '@stencil/core/internal/client';\nimport { g as getTimeGivenProgression } from './cubic-bezier.js';\nimport { o as getPresentedOverlay, n as focusFirstDescendant, q as focusLastDescendant } from './overlays.js';\nimport { G as GESTURE_CONTROLLER } from './gesture-controller.js';\nimport { shouldUseCloseWatcher } from './hardware-back-button.js';\nimport { m as isEndSide, i as inheritAriaAttributes, n as assert, k as clamp } from './helpers.js';\nimport { m as menuController } from './index4.js';\nimport { h as hostContext } from './theme.js';\nimport { c as config, b as getIonMode } from './ionic-global.js';\nimport { d as defineCustomElement$2 } from './backdrop.js';\n\nconst menuIosCss = \":host{--width:304px;--min-width:auto;--max-width:auto;--height:100%;--min-height:auto;--max-height:auto;--background:var(--ion-background-color, #fff);left:0;right:0;top:0;bottom:0;display:none;position:absolute;contain:strict}:host(.show-menu){display:block}.menu-inner{-webkit-transform:translateX(-9999px);transform:translateX(-9999px);display:-ms-flexbox;display:flex;position:absolute;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:justify;justify-content:space-between;width:var(--width);min-width:var(--min-width);max-width:var(--max-width);height:var(--height);min-height:var(--min-height);max-height:var(--max-height);background:var(--background);contain:strict}:host(.menu-side-start) .menu-inner{--ion-safe-area-right:0px;top:0;bottom:0}:host(.menu-side-start) .menu-inner{inset-inline-start:0;inset-inline-end:auto}:host-context([dir=rtl]):host(.menu-side-start) .menu-inner,:host-context([dir=rtl]).menu-side-start .menu-inner{--ion-safe-area-right:unset;--ion-safe-area-left:0px}@supports selector(:dir(rtl)){:host(.menu-side-start:dir(rtl)) .menu-inner{--ion-safe-area-right:unset;--ion-safe-area-left:0px}}:host(.menu-side-end) .menu-inner{--ion-safe-area-left:0px;top:0;bottom:0}:host(.menu-side-end) .menu-inner{inset-inline-start:auto;inset-inline-end:0}:host-context([dir=rtl]):host(.menu-side-end) .menu-inner,:host-context([dir=rtl]).menu-side-end .menu-inner{--ion-safe-area-left:unset;--ion-safe-area-right:0px}@supports selector(:dir(rtl)){:host(.menu-side-end:dir(rtl)) .menu-inner{--ion-safe-area-left:unset;--ion-safe-area-right:0px}}ion-backdrop{display:none;opacity:0.01;z-index:-1}@media (max-width: 340px){.menu-inner{--width:264px}}:host(.menu-type-reveal){z-index:0}:host(.menu-type-reveal.show-menu) .menu-inner{-webkit-transform:translate3d(0,  0,  0);transform:translate3d(0,  0,  0)}:host(.menu-type-overlay){z-index:1000}:host(.menu-type-overlay) .show-backdrop{display:block;cursor:pointer}:host(.menu-pane-visible){-ms-flex:0 1 auto;flex:0 1 auto;width:var(--side-width, var(--width));min-width:var(--side-min-width, var(--min-width));max-width:var(--side-max-width, var(--max-width))}:host(.menu-pane-visible.split-pane-side){left:0;right:0;top:0;bottom:0;position:relative;-webkit-box-shadow:none;box-shadow:none;z-index:0}:host(.menu-pane-visible.split-pane-side.menu-enabled){display:-ms-flexbox;display:flex;-ms-flex-negative:0;flex-shrink:0}:host(.menu-pane-visible.split-pane-side){-ms-flex-order:-1;order:-1}:host(.menu-pane-visible.split-pane-side[side=end]){-ms-flex-order:1;order:1}:host(.menu-pane-visible) .menu-inner{left:0;right:0;width:auto;-webkit-transform:none;transform:none;-webkit-box-shadow:none;box-shadow:none}:host(.menu-pane-visible) ion-backdrop{display:hidden !important}:host(.menu-pane-visible.split-pane-side){-webkit-border-start:0;border-inline-start:0;-webkit-border-end:var(--border);border-inline-end:var(--border);border-top:0;border-bottom:0;min-width:var(--side-min-width);max-width:var(--side-max-width)}:host(.menu-pane-visible.split-pane-side[side=end]){-webkit-border-start:var(--border);border-inline-start:var(--border);-webkit-border-end:0;border-inline-end:0;border-top:0;border-bottom:0;min-width:var(--side-min-width);max-width:var(--side-max-width)}:host(.menu-type-push){z-index:1000}:host(.menu-type-push) .show-backdrop{display:block}\";\nconst IonMenuIosStyle0 = menuIosCss;\n\nconst menuMdCss = \":host{--width:304px;--min-width:auto;--max-width:auto;--height:100%;--min-height:auto;--max-height:auto;--background:var(--ion-background-color, #fff);left:0;right:0;top:0;bottom:0;display:none;position:absolute;contain:strict}:host(.show-menu){display:block}.menu-inner{-webkit-transform:translateX(-9999px);transform:translateX(-9999px);display:-ms-flexbox;display:flex;position:absolute;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:justify;justify-content:space-between;width:var(--width);min-width:var(--min-width);max-width:var(--max-width);height:var(--height);min-height:var(--min-height);max-height:var(--max-height);background:var(--background);contain:strict}:host(.menu-side-start) .menu-inner{--ion-safe-area-right:0px;top:0;bottom:0}:host(.menu-side-start) .menu-inner{inset-inline-start:0;inset-inline-end:auto}:host-context([dir=rtl]):host(.menu-side-start) .menu-inner,:host-context([dir=rtl]).menu-side-start .menu-inner{--ion-safe-area-right:unset;--ion-safe-area-left:0px}@supports selector(:dir(rtl)){:host(.menu-side-start:dir(rtl)) .menu-inner{--ion-safe-area-right:unset;--ion-safe-area-left:0px}}:host(.menu-side-end) .menu-inner{--ion-safe-area-left:0px;top:0;bottom:0}:host(.menu-side-end) .menu-inner{inset-inline-start:auto;inset-inline-end:0}:host-context([dir=rtl]):host(.menu-side-end) .menu-inner,:host-context([dir=rtl]).menu-side-end .menu-inner{--ion-safe-area-left:unset;--ion-safe-area-right:0px}@supports selector(:dir(rtl)){:host(.menu-side-end:dir(rtl)) .menu-inner{--ion-safe-area-left:unset;--ion-safe-area-right:0px}}ion-backdrop{display:none;opacity:0.01;z-index:-1}@media (max-width: 340px){.menu-inner{--width:264px}}:host(.menu-type-reveal){z-index:0}:host(.menu-type-reveal.show-menu) .menu-inner{-webkit-transform:translate3d(0,  0,  0);transform:translate3d(0,  0,  0)}:host(.menu-type-overlay){z-index:1000}:host(.menu-type-overlay) .show-backdrop{display:block;cursor:pointer}:host(.menu-pane-visible){-ms-flex:0 1 auto;flex:0 1 auto;width:var(--side-width, var(--width));min-width:var(--side-min-width, var(--min-width));max-width:var(--side-max-width, var(--max-width))}:host(.menu-pane-visible.split-pane-side){left:0;right:0;top:0;bottom:0;position:relative;-webkit-box-shadow:none;box-shadow:none;z-index:0}:host(.menu-pane-visible.split-pane-side.menu-enabled){display:-ms-flexbox;display:flex;-ms-flex-negative:0;flex-shrink:0}:host(.menu-pane-visible.split-pane-side){-ms-flex-order:-1;order:-1}:host(.menu-pane-visible.split-pane-side[side=end]){-ms-flex-order:1;order:1}:host(.menu-pane-visible) .menu-inner{left:0;right:0;width:auto;-webkit-transform:none;transform:none;-webkit-box-shadow:none;box-shadow:none}:host(.menu-pane-visible) ion-backdrop{display:hidden !important}:host(.menu-pane-visible.split-pane-side){-webkit-border-start:0;border-inline-start:0;-webkit-border-end:var(--border);border-inline-end:var(--border);border-top:0;border-bottom:0;min-width:var(--side-min-width);max-width:var(--side-max-width)}:host(.menu-pane-visible.split-pane-side[side=end]){-webkit-border-start:var(--border);border-inline-start:var(--border);-webkit-border-end:0;border-inline-end:0;border-top:0;border-bottom:0;min-width:var(--side-min-width);max-width:var(--side-max-width)}:host(.menu-type-overlay) .menu-inner{-webkit-box-shadow:4px 0px 16px rgba(0, 0, 0, 0.18);box-shadow:4px 0px 16px rgba(0, 0, 0, 0.18)}\";\nconst IonMenuMdStyle0 = menuMdCss;\n\nconst iosEasing = 'cubic-bezier(0.32,0.72,0,1)';\nconst mdEasing = 'cubic-bezier(0.0,0.0,0.2,1)';\nconst iosEasingReverse = 'cubic-bezier(1, 0, 0.68, 0.28)';\nconst mdEasingReverse = 'cubic-bezier(0.4, 0, 0.6, 1)';\nconst Menu = /*@__PURE__*/ proxyCustomElement(class Menu extends HTMLElement {\n    constructor() {\n        super();\n        this.__registerHost();\n        this.__attachShadow();\n        this.ionWillOpen = createEvent(this, \"ionWillOpen\", 7);\n        this.ionWillClose = createEvent(this, \"ionWillClose\", 7);\n        this.ionDidOpen = createEvent(this, \"ionDidOpen\", 7);\n        this.ionDidClose = createEvent(this, \"ionDidClose\", 7);\n        this.ionMenuChange = createEvent(this, \"ionMenuChange\", 7);\n        this.lastOnEnd = 0;\n        this.blocker = GESTURE_CONTROLLER.createBlocker({ disableScroll: true });\n        this.didLoad = false;\n        /**\n         * Flag used to determine if an open/close\n         * operation was cancelled. For example, if\n         * an app calls \"menu.open\" then disables the menu\n         * part way through the animation, then this would\n         * be considered a cancelled operation.\n         */\n        this.operationCancelled = false;\n        this.isAnimating = false;\n        this._isOpen = false;\n        this.inheritedAttributes = {};\n        this.handleFocus = (ev) => {\n            /**\n             * Overlays have their own focus trapping listener\n             * so we do not want the two listeners to conflict\n             * with each other. If the top-most overlay that is\n             * open does not contain this ion-menu, then ion-menu's\n             * focus trapping should not run.\n             */\n            const lastOverlay = getPresentedOverlay(document);\n            if (lastOverlay && !lastOverlay.contains(this.el)) {\n                return;\n            }\n            this.trapKeyboardFocus(ev, document);\n        };\n        this.isPaneVisible = false;\n        this.isEndSide = false;\n        this.contentId = undefined;\n        this.menuId = undefined;\n        this.type = undefined;\n        this.disabled = false;\n        this.side = 'start';\n        this.swipeGesture = true;\n        this.maxEdgeStart = 50;\n    }\n    typeChanged(type, oldType) {\n        const contentEl = this.contentEl;\n        if (contentEl) {\n            if (oldType !== undefined) {\n                contentEl.classList.remove(`menu-content-${oldType}`);\n            }\n            contentEl.classList.add(`menu-content-${type}`);\n            contentEl.removeAttribute('style');\n        }\n        if (this.menuInnerEl) {\n            // Remove effects of previous animations\n            this.menuInnerEl.removeAttribute('style');\n        }\n        this.animation = undefined;\n    }\n    disabledChanged() {\n        this.updateState();\n        this.ionMenuChange.emit({\n            disabled: this.disabled,\n            open: this._isOpen,\n        });\n    }\n    sideChanged() {\n        this.isEndSide = isEndSide(this.side);\n        /**\n         * Menu direction animation is calculated based on the document direction.\n         * If the document direction changes, we need to create a new animation.\n         */\n        this.animation = undefined;\n    }\n    swipeGestureChanged() {\n        this.updateState();\n    }\n    async connectedCallback() {\n        // TODO: connectedCallback is fired in CE build\n        // before WC is defined. This needs to be fixed in Stencil.\n        if (typeof customElements !== 'undefined' && customElements != null) {\n            await customElements.whenDefined('ion-menu');\n        }\n        if (this.type === undefined) {\n            this.type = config.get('menuType', 'overlay');\n        }\n        if (!Build.isBrowser) {\n            return;\n        }\n        const content = this.contentId !== undefined ? document.getElementById(this.contentId) : null;\n        if (content === null) {\n            console.error('Menu: must have a \"content\" element to listen for drag events on.');\n            return;\n        }\n        if (this.el.contains(content)) {\n            console.error(`Menu: \"contentId\" should refer to the main view's ion-content, not the ion-content inside of the ion-menu.`);\n        }\n        this.contentEl = content;\n        // add menu's content classes\n        content.classList.add('menu-content');\n        this.typeChanged(this.type, undefined);\n        this.sideChanged();\n        // register this menu with the app's menu controller\n        menuController._register(this);\n        this.menuChanged();\n        this.gesture = (await import('./index3.js')).createGesture({\n            el: document,\n            gestureName: 'menu-swipe',\n            gesturePriority: 30,\n            threshold: 10,\n            blurOnStart: true,\n            canStart: (ev) => this.canStart(ev),\n            onWillStart: () => this.onWillStart(),\n            onStart: () => this.onStart(),\n            onMove: (ev) => this.onMove(ev),\n            onEnd: (ev) => this.onEnd(ev),\n        });\n        this.updateState();\n    }\n    componentWillLoad() {\n        this.inheritedAttributes = inheritAriaAttributes(this.el);\n    }\n    async componentDidLoad() {\n        this.didLoad = true;\n        /**\n         * A menu inside of a split pane is assumed\n         * to be a side pane.\n         *\n         * When the menu is loaded it needs to\n         * see if it should be considered visible inside\n         * of the split pane. If the split pane is\n         * hidden then the menu should be too.\n         */\n        const splitPane = this.el.closest('ion-split-pane');\n        if (splitPane !== null) {\n            this.isPaneVisible = await splitPane.isVisible();\n        }\n        this.menuChanged();\n        this.updateState();\n    }\n    menuChanged() {\n        /**\n         * Inform dependent components such as ion-menu-button\n         * that the menu is ready. Note that we only want to do this\n         * once the menu has been rendered which is why we check for didLoad.\n         */\n        if (this.didLoad) {\n            this.ionMenuChange.emit({ disabled: this.disabled, open: this._isOpen });\n        }\n    }\n    async disconnectedCallback() {\n        /**\n         * The menu should be closed when it is\n         * unmounted from the DOM.\n         * This is an async call, so we need to wait for\n         * this to finish otherwise contentEl\n         * will not have MENU_CONTENT_OPEN removed.\n         */\n        await this.close(false);\n        this.blocker.destroy();\n        menuController._unregister(this);\n        if (this.animation) {\n            this.animation.destroy();\n        }\n        if (this.gesture) {\n            this.gesture.destroy();\n            this.gesture = undefined;\n        }\n        this.animation = undefined;\n        this.contentEl = undefined;\n    }\n    onSplitPaneChanged(ev) {\n        const closestSplitPane = this.el.closest('ion-split-pane');\n        if (closestSplitPane !== null && closestSplitPane === ev.target) {\n            this.isPaneVisible = ev.detail.visible;\n            this.updateState();\n        }\n    }\n    onBackdropClick(ev) {\n        // TODO(FW-2832): type (CustomEvent triggers errors which should be sorted)\n        if (this._isOpen && this.lastOnEnd < ev.timeStamp - 100) {\n            const shouldClose = ev.composedPath ? !ev.composedPath().includes(this.menuInnerEl) : false;\n            if (shouldClose) {\n                ev.preventDefault();\n                ev.stopPropagation();\n                this.close();\n            }\n        }\n    }\n    onKeydown(ev) {\n        if (ev.key === 'Escape') {\n            this.close();\n        }\n    }\n    /**\n     * Returns `true` is the menu is open.\n     */\n    isOpen() {\n        return Promise.resolve(this._isOpen);\n    }\n    /**\n     * Returns `true` is the menu is active.\n     *\n     * A menu is active when it can be opened or closed, meaning it's enabled\n     * and it's not part of a `ion-split-pane`.\n     */\n    isActive() {\n        return Promise.resolve(this._isActive());\n    }\n    /**\n     * Opens the menu. If the menu is already open or it can't be opened,\n     * it returns `false`.\n     */\n    open(animated = true) {\n        return this.setOpen(true, animated);\n    }\n    /**\n     * Closes the menu. If the menu is already closed or it can't be closed,\n     * it returns `false`.\n     */\n    close(animated = true) {\n        return this.setOpen(false, animated);\n    }\n    /**\n     * Toggles the menu. If the menu is already open, it will try to close, otherwise it will try to open it.\n     * If the operation can't be completed successfully, it returns `false`.\n     */\n    toggle(animated = true) {\n        return this.setOpen(!this._isOpen, animated);\n    }\n    /**\n     * Opens or closes the button.\n     * If the operation can't be completed successfully, it returns `false`.\n     */\n    setOpen(shouldOpen, animated = true) {\n        return menuController._setOpen(this, shouldOpen, animated);\n    }\n    trapKeyboardFocus(ev, doc) {\n        const target = ev.target;\n        if (!target) {\n            return;\n        }\n        /**\n         * If the target is inside the menu contents, let the browser\n         * focus as normal and keep a log of the last focused element.\n         */\n        if (this.el.contains(target)) {\n            this.lastFocus = target;\n        }\n        else {\n            /**\n             * Otherwise, we are about to have focus go out of the menu.\n             * Wrap the focus to either the first or last element.\n             */\n            const { el } = this;\n            /**\n             * Once we call `focusFirstDescendant`, another focus event\n             * will fire, which will cause `lastFocus` to be updated\n             * before we can run the code after that. We cache the value\n             * here to avoid that.\n             */\n            focusFirstDescendant(el);\n            /**\n             * If the cached last focused element is the same as the now-\n             * active element, that means the user was on the first element\n             * already and pressed Shift + Tab, so we need to wrap to the\n             * last descendant.\n             */\n            if (this.lastFocus === doc.activeElement) {\n                focusLastDescendant(el);\n            }\n        }\n    }\n    async _setOpen(shouldOpen, animated = true) {\n        // If the menu is disabled or it is currently being animated, let's do nothing\n        if (!this._isActive() || this.isAnimating || shouldOpen === this._isOpen) {\n            return false;\n        }\n        this.beforeAnimation(shouldOpen);\n        await this.loadAnimation();\n        await this.startAnimation(shouldOpen, animated);\n        /**\n         * If the animation was cancelled then\n         * return false because the operation\n         * did not succeed.\n         */\n        if (this.operationCancelled) {\n            this.operationCancelled = false;\n            return false;\n        }\n        this.afterAnimation(shouldOpen);\n        return true;\n    }\n    async loadAnimation() {\n        // Menu swipe animation takes the menu's inner width as parameter,\n        // If `offsetWidth` changes, we need to create a new animation.\n        const width = this.menuInnerEl.offsetWidth;\n        /**\n         * Menu direction animation is calculated based on the document direction.\n         * If the document direction changes, we need to create a new animation.\n         */\n        const isEndSide$1 = isEndSide(this.side);\n        if (width === this.width && this.animation !== undefined && isEndSide$1 === this.isEndSide) {\n            return;\n        }\n        this.width = width;\n        this.isEndSide = isEndSide$1;\n        // Destroy existing animation\n        if (this.animation) {\n            this.animation.destroy();\n            this.animation = undefined;\n        }\n        // Create new animation\n        const animation = (this.animation = await menuController._createAnimation(this.type, this));\n        if (!config.getBoolean('animated', true)) {\n            animation.duration(0);\n        }\n        animation.fill('both');\n    }\n    async startAnimation(shouldOpen, animated) {\n        const isReversed = !shouldOpen;\n        const mode = getIonMode(this);\n        const easing = mode === 'ios' ? iosEasing : mdEasing;\n        const easingReverse = mode === 'ios' ? iosEasingReverse : mdEasingReverse;\n        const ani = this.animation\n            .direction(isReversed ? 'reverse' : 'normal')\n            .easing(isReversed ? easingReverse : easing);\n        if (animated) {\n            await ani.play();\n        }\n        else {\n            ani.play({ sync: true });\n        }\n        /**\n         * We run this after the play invocation\n         * instead of using ani.onFinish so that\n         * multiple onFinish callbacks do not get\n         * run if an animation is played, stopped,\n         * and then played again.\n         */\n        if (ani.getDirection() === 'reverse') {\n            ani.direction('normal');\n        }\n    }\n    _isActive() {\n        return !this.disabled && !this.isPaneVisible;\n    }\n    canSwipe() {\n        return this.swipeGesture && !this.isAnimating && this._isActive();\n    }\n    canStart(detail) {\n        // Do not allow swipe gesture if a modal is open\n        const isModalPresented = !!document.querySelector('ion-modal.show-modal');\n        if (isModalPresented || !this.canSwipe()) {\n            return false;\n        }\n        if (this._isOpen) {\n            return true;\n        }\n        else if (menuController._getOpenSync()) {\n            return false;\n        }\n        return checkEdgeSide(window, detail.currentX, this.isEndSide, this.maxEdgeStart);\n    }\n    onWillStart() {\n        this.beforeAnimation(!this._isOpen);\n        return this.loadAnimation();\n    }\n    onStart() {\n        if (!this.isAnimating || !this.animation) {\n            assert(false, 'isAnimating has to be true');\n            return;\n        }\n        // the cloned animation should not use an easing curve during seek\n        this.animation.progressStart(true, this._isOpen ? 1 : 0);\n    }\n    onMove(detail) {\n        if (!this.isAnimating || !this.animation) {\n            assert(false, 'isAnimating has to be true');\n            return;\n        }\n        const delta = computeDelta(detail.deltaX, this._isOpen, this.isEndSide);\n        const stepValue = delta / this.width;\n        this.animation.progressStep(this._isOpen ? 1 - stepValue : stepValue);\n    }\n    onEnd(detail) {\n        if (!this.isAnimating || !this.animation) {\n            assert(false, 'isAnimating has to be true');\n            return;\n        }\n        const isOpen = this._isOpen;\n        const isEndSide = this.isEndSide;\n        const delta = computeDelta(detail.deltaX, isOpen, isEndSide);\n        const width = this.width;\n        const stepValue = delta / width;\n        const velocity = detail.velocityX;\n        const z = width / 2.0;\n        const shouldCompleteRight = velocity >= 0 && (velocity > 0.2 || detail.deltaX > z);\n        const shouldCompleteLeft = velocity <= 0 && (velocity < -0.2 || detail.deltaX < -z);\n        const shouldComplete = isOpen\n            ? isEndSide\n                ? shouldCompleteRight\n                : shouldCompleteLeft\n            : isEndSide\n                ? shouldCompleteLeft\n                : shouldCompleteRight;\n        let shouldOpen = !isOpen && shouldComplete;\n        if (isOpen && !shouldComplete) {\n            shouldOpen = true;\n        }\n        this.lastOnEnd = detail.currentTime;\n        // Account for rounding errors in JS\n        let newStepValue = shouldComplete ? 0.001 : -0.001;\n        /**\n         * stepValue can sometimes return a negative\n         * value, but you can't have a negative time value\n         * for the cubic bezier curve (at least with web animations)\n         */\n        const adjustedStepValue = stepValue < 0 ? 0.01 : stepValue;\n        /**\n         * Animation will be reversed here, so need to\n         * reverse the easing curve as well\n         *\n         * Additionally, we need to account for the time relative\n         * to the new easing curve, as `stepValue` is going to be given\n         * in terms of a linear curve.\n         */\n        newStepValue +=\n            getTimeGivenProgression([0, 0], [0.4, 0], [0.6, 1], [1, 1], clamp(0, adjustedStepValue, 0.9999))[0] || 0;\n        const playTo = this._isOpen ? !shouldComplete : shouldComplete;\n        this.animation\n            .easing('cubic-bezier(0.4, 0.0, 0.6, 1)')\n            .onFinish(() => this.afterAnimation(shouldOpen), { oneTimeCallback: true })\n            .progressEnd(playTo ? 1 : 0, this._isOpen ? 1 - newStepValue : newStepValue, 300);\n    }\n    beforeAnimation(shouldOpen) {\n        assert(!this.isAnimating, '_before() should not be called while animating');\n        // this places the menu into the correct location before it animates in\n        // this css class doesn't actually kick off any animations\n        this.el.classList.add(SHOW_MENU);\n        /**\n         * We add a tabindex here so that focus trapping\n         * still works even if the menu does not have\n         * any focusable elements slotted inside. The\n         * focus trapping utility will fallback to focusing\n         * the menu so focus does not leave when the menu\n         * is open.\n         */\n        this.el.setAttribute('tabindex', '0');\n        if (this.backdropEl) {\n            this.backdropEl.classList.add(SHOW_BACKDROP);\n        }\n        // add css class and hide content behind menu from screen readers\n        if (this.contentEl) {\n            this.contentEl.classList.add(MENU_CONTENT_OPEN);\n            /**\n             * When the menu is open and overlaying the main\n             * content, the main content should not be announced\n             * by the screenreader as the menu is the main\n             * focus. This is useful with screenreaders that have\n             * \"read from top\" gestures that read the entire\n             * page from top to bottom when activated.\n             * This should be done before the animation starts\n             * so that users cannot accidentally scroll\n             * the content while dragging a menu open.\n             */\n            this.contentEl.setAttribute('aria-hidden', 'true');\n        }\n        this.blocker.block();\n        this.isAnimating = true;\n        if (shouldOpen) {\n            this.ionWillOpen.emit();\n        }\n        else {\n            this.ionWillClose.emit();\n        }\n    }\n    afterAnimation(isOpen) {\n        var _a;\n        // keep opening/closing the menu disabled for a touch more yet\n        // only add listeners/css if it's enabled and isOpen\n        // and only remove listeners/css if it's not open\n        // emit opened/closed events\n        this._isOpen = isOpen;\n        this.isAnimating = false;\n        if (!this._isOpen) {\n            this.blocker.unblock();\n        }\n        if (isOpen) {\n            // emit open event\n            this.ionDidOpen.emit();\n            /**\n             * Move focus to the menu to prepare focus trapping, as long as\n             * it isn't already focused. Use the host element instead of the\n             * first descendant to avoid the scroll position jumping around.\n             */\n            const focusedMenu = (_a = document.activeElement) === null || _a === void 0 ? void 0 : _a.closest('ion-menu');\n            if (focusedMenu !== this.el) {\n                this.el.focus();\n            }\n            // start focus trapping\n            document.addEventListener('focus', this.handleFocus, true);\n        }\n        else {\n            // remove css classes and unhide content from screen readers\n            this.el.classList.remove(SHOW_MENU);\n            /**\n             * Remove tabindex from the menu component\n             * so that is cannot be tabbed to.\n             */\n            this.el.removeAttribute('tabindex');\n            if (this.contentEl) {\n                this.contentEl.classList.remove(MENU_CONTENT_OPEN);\n                /**\n                 * Remove aria-hidden so screen readers\n                 * can announce the main content again\n                 * now that the menu is not the main focus.\n                 */\n                this.contentEl.removeAttribute('aria-hidden');\n            }\n            if (this.backdropEl) {\n                this.backdropEl.classList.remove(SHOW_BACKDROP);\n            }\n            if (this.animation) {\n                this.animation.stop();\n            }\n            // emit close event\n            this.ionDidClose.emit();\n            // undo focus trapping so multiple menus don't collide\n            document.removeEventListener('focus', this.handleFocus, true);\n        }\n    }\n    updateState() {\n        const isActive = this._isActive();\n        if (this.gesture) {\n            this.gesture.enable(isActive && this.swipeGesture);\n        }\n        /**\n         * If the menu is disabled but it is still open\n         * then we should close the menu immediately.\n         * Additionally, if the menu is in the process\n         * of animating {open, close} and the menu is disabled\n         * then it should still be closed immediately.\n         */\n        if (!isActive) {\n            /**\n             * It is possible to disable the menu while\n             * it is mid-animation. When this happens, we\n             * need to set the operationCancelled flag\n             * so that this._setOpen knows to return false\n             * and not run the \"afterAnimation\" callback.\n             */\n            if (this.isAnimating) {\n                this.operationCancelled = true;\n            }\n            /**\n             * If the menu is disabled then we should\n             * forcibly close the menu even if it is open.\n             */\n            this.afterAnimation(false);\n        }\n    }\n    render() {\n        const { type, disabled, el, isPaneVisible, inheritedAttributes, side } = this;\n        const mode = getIonMode(this);\n        /**\n         * If the Close Watcher is enabled then\n         * the ionBackButton listener in the menu controller\n         * will handle closing the menu when Escape is pressed.\n         */\n        return (h(Host, { key: '30c0c9bfb8973e4a6feb658f8c4ee8e362f464ed', onKeyDown: shouldUseCloseWatcher() ? null : this.onKeydown, role: \"navigation\", \"aria-label\": inheritedAttributes['aria-label'] || 'menu', class: {\n                [mode]: true,\n                [`menu-type-${type}`]: true,\n                'menu-enabled': !disabled,\n                [`menu-side-${side}`]: true,\n                'menu-pane-visible': isPaneVisible,\n                'split-pane-side': hostContext('ion-split-pane', el),\n            } }, h(\"div\", { key: '34b0e5840906862cf1bc27207e089004b0402c56', class: \"menu-inner\", part: \"container\", ref: (el) => (this.menuInnerEl = el) }, h(\"slot\", { key: '2cd7e61a8c0987ca4b3f1f8b33cba7152f1275fe' })), h(\"ion-backdrop\", { key: 'd190b1f9b66c76e276f27bfe074d3aab796180fb', ref: (el) => (this.backdropEl = el), class: \"menu-backdrop\", tappable: false, stopPropagation: false, part: \"backdrop\" })));\n    }\n    get el() { return this; }\n    static get watchers() { return {\n        \"type\": [\"typeChanged\"],\n        \"disabled\": [\"disabledChanged\"],\n        \"side\": [\"sideChanged\"],\n        \"swipeGesture\": [\"swipeGestureChanged\"]\n    }; }\n    static get style() { return {\n        ios: IonMenuIosStyle0,\n        md: IonMenuMdStyle0\n    }; }\n}, [33, \"ion-menu\", {\n        \"contentId\": [513, \"content-id\"],\n        \"menuId\": [513, \"menu-id\"],\n        \"type\": [1025],\n        \"disabled\": [1028],\n        \"side\": [513],\n        \"swipeGesture\": [4, \"swipe-gesture\"],\n        \"maxEdgeStart\": [2, \"max-edge-start\"],\n        \"isPaneVisible\": [32],\n        \"isEndSide\": [32],\n        \"isOpen\": [64],\n        \"isActive\": [64],\n        \"open\": [64],\n        \"close\": [64],\n        \"toggle\": [64],\n        \"setOpen\": [64]\n    }, [[16, \"ionSplitPaneVisible\", \"onSplitPaneChanged\"], [2, \"click\", \"onBackdropClick\"]], {\n        \"type\": [\"typeChanged\"],\n        \"disabled\": [\"disabledChanged\"],\n        \"side\": [\"sideChanged\"],\n        \"swipeGesture\": [\"swipeGestureChanged\"]\n    }]);\nconst computeDelta = (deltaX, isOpen, isEndSide) => {\n    return Math.max(0, isOpen !== isEndSide ? -deltaX : deltaX);\n};\nconst checkEdgeSide = (win, posX, isEndSide, maxEdgeStart) => {\n    if (isEndSide) {\n        return posX >= win.innerWidth - maxEdgeStart;\n    }\n    else {\n        return posX <= maxEdgeStart;\n    }\n};\nconst SHOW_MENU = 'show-menu';\nconst SHOW_BACKDROP = 'show-backdrop';\nconst MENU_CONTENT_OPEN = 'menu-content-open';\nfunction defineCustomElement$1() {\n    if (typeof customElements === \"undefined\") {\n        return;\n    }\n    const components = [\"ion-menu\", \"ion-backdrop\"];\n    components.forEach(tagName => { switch (tagName) {\n        case \"ion-menu\":\n            if (!customElements.get(tagName)) {\n                customElements.define(tagName, Menu);\n            }\n            break;\n        case \"ion-backdrop\":\n            if (!customElements.get(tagName)) {\n                defineCustomElement$2();\n            }\n            break;\n    } });\n}\n\nconst IonMenu = Menu;\nconst defineCustomElement = defineCustomElement$1;\n\nexport { IonMenu, defineCustomElement };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}