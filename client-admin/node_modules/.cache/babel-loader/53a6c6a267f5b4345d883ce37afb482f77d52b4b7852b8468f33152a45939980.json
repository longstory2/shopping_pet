{"ast":null,"code":"var _jsxFileName = \"D:\\\\H\\u1ECCC T\\u1EACP\\\\L\\u1EADp tr\\xECnh web n\\xE2ng cao\\\\clone\\\\shopping\\\\client-admin\\\\src\\\\components\\\\CategoryComponent.js\";\nimport axios from 'axios';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React, { Component } from 'react';\nimport { Button, Modal, ModalBody, ModalFooter, ModalHeader, Table } from 'reactstrap';\nimport { v4 as uuidv4 } from 'uuid'; // Import uuid\nimport '../assets/SCSS/CategoryComponent.scss';\nimport MyContext from '../contexts/MyContext';\nimport CategoryDetail from './CategoryDetailComponent';\nimport FooterComponent from './FooterComponent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Category extends Component {\n  constructor(props) {\n    super(props);\n    // Toggle modal visibility\n    this.toggleModal = () => {\n      this.setState(prevState => ({\n        isOpenModal: !prevState.isOpenModal\n      }));\n    };\n    // Handle click on Add new category button\n    this.handleAddNewUser = () => {\n      const {\n        categories\n      } = this.state;\n      let newItemSelected;\n      if (categories.length === 0) {\n        // If categories array is empty, generate new UUID for ID\n        const tempId = uuidv4();\n        newItemSelected = {\n          _id: tempId,\n          name: ''\n        };\n      } else {\n        // Use ID of the first item in the list\n        const firstItem = categories[0];\n        newItemSelected = {\n          ...firstItem\n        }; // Ensure _id is kept unchanged\n      }\n      this.setState({\n        itemSelected: newItemSelected,\n        isOpenModal: true\n      });\n    };\n    // Handle click on a row in the table\n    this.trItemClick = item => {\n      this.setState({\n        itemSelected: item,\n        isOpenModal: true\n      });\n    };\n    // Handle save category (add or update)\n    this.handleSaveCategory = category => {\n      if (category._id) {\n        this.apiUpdateCategory(category);\n      } else {\n        this.apiAddCategory(category);\n      }\n    };\n    // API call to add new category\n    this.apiAddCategory = category => {\n      axios.post('/api/admin/categories', category).then(res => {\n        alert('Category added successfully!');\n        this.apiGetCategories();\n        this.toggleModal();\n      }).catch(error => {\n        console.error('Error adding category:', error);\n        alert('Failed to add category.');\n      });\n    };\n    // API call to update category\n    this.apiUpdateCategory = category => {\n      axios.put(`/api/admin/categories/${category._id}`, category).then(res => {\n        alert('Category updated successfully!');\n        this.apiGetCategories();\n        this.toggleModal();\n      }).catch(error => {\n        console.error('Error updating category:', error);\n        alert('Failed to update category.');\n      });\n    };\n    this.state = {\n      categories: [],\n      itemSelected: null,\n      isOpenModal: false // State to control modal visibility\n    };\n  }\n  componentDidMount() {\n    this.apiGetCategories();\n  }\n  render() {\n    const {\n      categories,\n      itemSelected,\n      isOpenModal\n    } = this.state;\n    const cates = categories.map(category => /*#__PURE__*/_jsxDEV(\"tr\", {\n      className: \"datatable\",\n      onClick: () => this.trItemClick(category),\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: category._id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: category.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, category._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"float-left\",\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          className: \"table table-bordered\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            className: \"thead-dark\",\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"table-dark\",\n                children: \"ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"table-dark\",\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: cates\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        isOpen: isOpenModal,\n        toggle: this.toggleModal,\n        children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n          toggle: this.toggleModal,\n          children: itemSelected ? 'Edit Category' : 'Add New Category'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n          children: /*#__PURE__*/_jsxDEV(CategoryDetail, {\n            item: itemSelected,\n            onSave: this.handleSaveCategory\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            color: \"secondary\",\n            onClick: this.toggleModal,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FooterComponent, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this);\n  }\n  // Fetch categories from API\n  apiGetCategories() {\n    const config = {\n      headers: {\n        'x-access-token': this.context.token\n      }\n    };\n    axios.get('/api/admin/categories', config).then(res => {\n      const result = res.data;\n      this.setState({\n        categories: result\n      });\n    }).catch(error => {\n      console.error('Error fetching categories:', error);\n    });\n  }\n}\nCategory.contextType = MyContext;\nexport default Category;","map":{"version":3,"names":["axios","React","Component","Button","Modal","ModalBody","ModalFooter","ModalHeader","Table","v4","uuidv4","MyContext","CategoryDetail","FooterComponent","jsxDEV","_jsxDEV","Category","constructor","props","toggleModal","setState","prevState","isOpenModal","handleAddNewUser","categories","state","newItemSelected","length","tempId","_id","name","firstItem","itemSelected","trItemClick","item","handleSaveCategory","category","apiUpdateCategory","apiAddCategory","post","then","res","alert","apiGetCategories","catch","error","console","put","componentDidMount","render","cates","map","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","isOpen","toggle","onSave","color","config","headers","context","token","get","result","data","contextType"],"sources":["D:/HỌC TẬP/Lập trình web nâng cao/clone/shopping/client-admin/src/components/CategoryComponent.js"],"sourcesContent":["import axios from 'axios';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React, { Component } from 'react';\nimport { Button, Modal, ModalBody, ModalFooter, ModalHeader, Table } from 'reactstrap';\nimport { v4 as uuidv4 } from 'uuid'; // Import uuid\nimport '../assets/SCSS/CategoryComponent.scss';\nimport MyContext from '../contexts/MyContext';\nimport CategoryDetail from './CategoryDetailComponent';\nimport FooterComponent from './FooterComponent';\n\nclass Category extends Component {\n  static contextType = MyContext;\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      categories: [],\n      itemSelected: null,\n      isOpenModal: false, // State to control modal visibility\n    };\n  }\n\n  componentDidMount() {\n    this.apiGetCategories();\n  }\n\n  // Toggle modal visibility\n  toggleModal = () => {\n    this.setState(prevState => ({\n      isOpenModal: !prevState.isOpenModal\n    }));\n  }\n\n  // Handle click on Add new category button\n  handleAddNewUser = () => {\n    const { categories } = this.state;\n    let newItemSelected;\n\n    if (categories.length === 0) {\n      // If categories array is empty, generate new UUID for ID\n      const tempId = uuidv4();\n      newItemSelected = { _id: tempId, name: '' };\n    } else {\n      // Use ID of the first item in the list\n      const firstItem = categories[0];\n      newItemSelected = { ...firstItem }; // Ensure _id is kept unchanged\n    }\n\n    this.setState({\n      itemSelected: newItemSelected,\n      isOpenModal: true,\n    });\n  }\n\n  // Handle click on a row in the table\n  trItemClick = (item) => {\n    this.setState({ itemSelected: item, isOpenModal: true });\n  }\n\n  render() {\n    const { categories, itemSelected, isOpenModal } = this.state;\n\n    const cates = categories.map(category => (\n      <tr key={category._id} className=\"datatable\" onClick={() => this.trItemClick(category)}>\n        <td>{category._id}</td>\n        <td>{category.name}</td>\n      </tr>\n    ));\n\n    return (\n      <div>\n        <div className=\"float-left\">\n        \n          <Table className=\"table table-bordered\">\n            <thead className=\"thead-dark\">\n              <tr>\n                <th className=\"table-dark\">ID</th>\n                <th className=\"table-dark\">Name</th>\n              </tr>\n            </thead>\n            <tbody>\n              {cates}\n            </tbody>\n          </Table>\n        </div>\n\n        <Modal isOpen={isOpenModal} toggle={this.toggleModal}>\n          <ModalHeader toggle={this.toggleModal}>{itemSelected ? 'Edit Category' : 'Add New Category'}</ModalHeader>\n          <ModalBody>\n            <CategoryDetail item={itemSelected} onSave={this.handleSaveCategory} />\n          </ModalBody>\n          <ModalFooter>\n            <Button color=\"secondary\" onClick={this.toggleModal}>Cancel</Button>\n          </ModalFooter>\n        </Modal>\n      \n        <FooterComponent />\n      </div>\n    );\n  }\n  \n  // Handle save category (add or update)\n  handleSaveCategory = (category) => {\n    if (category._id) {\n      this.apiUpdateCategory(category);\n    } else {\n      this.apiAddCategory(category);\n    }\n  }\n\n  // API call to add new category\n  apiAddCategory = (category) => {\n    axios.post('/api/admin/categories', category)\n      .then(res => {\n        alert('Category added successfully!');\n        this.apiGetCategories();\n        this.toggleModal();\n      })\n      .catch(error => {\n        console.error('Error adding category:', error);\n        alert('Failed to add category.');\n      });\n  }\n\n  // API call to update category\n  apiUpdateCategory = (category) => {\n    axios.put(`/api/admin/categories/${category._id}`, category)\n      .then(res => {\n        alert('Category updated successfully!');\n        this.apiGetCategories();\n        this.toggleModal();\n      })\n      .catch(error => {\n        console.error('Error updating category:', error);\n        alert('Failed to update category.');\n      });\n  }\n\n  // Fetch categories from API\n  apiGetCategories() {\n    const config = { headers: { 'x-access-token': this.context.token } };\n    axios.get('/api/admin/categories', config)\n      .then(res => {\n        const result = res.data;\n        this.setState({ categories: result });\n      })\n      .catch(error => {\n        console.error('Error fetching categories:', error);\n      });\n  }\n}\n\nexport default Category;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}